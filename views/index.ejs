<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Insert title here</title>
    <link rel="manifest" href="manifest.json"/>
</head>
<body>
<script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
<script src="https://www.gstatic.com/firebasejs/7.18.0/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/7.18.0/firebase-messaging.js"></script>
<script>
    // Initialize Firebase
    let subscription;
    const config = {
        apiKey: "AIzaSyClNFoKocaycrGI42gTaBcYINw0d55t--4",
        authDomain: "fcm-node-test-a9b79.firebaseapp.com",
        databaseURL: "https://fcm-node-test-a9b79.firebaseio.com",
        projectId: "fcm-node-test-a9b79",
        storageBucket: "fcm-node-test-a9b79.appspot.com",
        messagingSenderId: "1015332584005",
        appId: "1:1015332584005:web:ca3292d06cd4b5bcf9012c",
        measurementId: "G-3EJ6VQC9J1"
    };
    firebase.initializeApp(config);

    const messaging = firebase.messaging();

    let token;
    messaging.requestPermission();      //알람 허용 여부

    function delete_token() {
        return messaging.deleteToken()
            .then((bool) => {
                $('#pk').html("로그아웃 상태");
                console.log("삭제여부 : " + bool);
                return bool;
            })
    }

    async function response_token() {
        let resp;
        await messaging.getToken().then((_token) => {
            let userId = document.getElementById('textarea').value;
            $('#pk').html("로그인 아이디 : " + userId);
            let other = document.getElementById('other').value;
            console.log("token : " + _token);
            console.log("userId : " + userId);
            console.log("other : " + other);
            subscription = {
                token: _token,
                userId: userId,
                other: other,
                serverNum: 1
            }
        }).catch((error) => {
            console.log(error);
            return error;
        });
        return await fetch('/fcm_sub', {
            method: 'POST',
            body: JSON.stringify(subscription),
            headers: {
                'content-type': 'application/json'
            }
        }).then((result) => {
            resp = result;
            console.log(result.status);
            return result.status;
        });
    }

    async function button1_click() {
        let result = await response_token();
        console.log("result : " + result);
        if (result == 201) {
            let bool = await delete_token();
            if(bool){
                await response_token();
            }
        }
    }

    function fcm_find() {
        let userId = document.getElementById('textarea2').value;
        subscription = {
            userId: userId
        }
        $.ajax({
            url: "/fcm_find",
            type: "POST",
            cache: false,
            dataType: "json",
            data: subscription,
            success: function (data) {
                console.log(data.result);
                console.log("length : " + data.result.length);
                $('#_token').html(JSON.stringify(data));
            },
            error: function (request, status, error) {
            }
        });
    }

    messaging.onMessage((payload) => {
        console.log('Message received. ', payload);
    });

    messaging.onTokenRefresh(() => {
        //When the token is updated, onTokenRefresh is called.
        messaging.getToken().then((refreshedToken) => {
            console.log("refreshedToken : " + refreshedToken);
        }).catch((err) => {
            console.log('Unable to retrieve refreshed token ', err);
        });
    });

    async function fcm_setting() {
        console.log("deleteToken");
        await messaging.deleteToken().then((bool) => {
            return messaging.getToken();
        })
            .then((_token) => {
                console.log(_token);
            })
            .catch((error) => {
                console.log(error);
            });
    }

</script>
<!--<script>-->
<!--    const publicVapidKey = 'BMEBxPI85QUcEtxr-xrH2qs1Fzl6ed2h7rQKXLuXsT2cR1fcb7EuI57B69J4DxtmP3PDhaVLnP5nK-Dpa0jx_Wo';-->
<!--    if ('serviceWorker' in navigator && 'PushManager' in window) {-->
<!--        send().catch(err=>console.error(err));-->
<!--    }-->
<!--    async function send(){-->
<!--        const register = await navigator.serviceWorker.register('/worker.js',{-->
<!--            scope:'/'-->
<!--        })-->
<!--        console.log("실행됨");-->
<!--        console.log(Notification.permission);-->
<!--        const subscription = await register.pushManager.subscribe({-->
<!--            userVisibleOnly:true,-->
<!--            applicationServerKey:publicVapidKey-->
<!--        });-->
<!--        navigator.serviceWorker.ready.then(function(reg) {-->
<!--            reg.pushManager.getSubscription().then(function(subscription) {-->
<!--                console.log(subscription);-->
<!--            })-->
<!--        });-->
<!--        console.log('Push');-->
<!--        $(function(){-->
<!--            $('.change_greeting').text(subscription.endpoint);-->
<!--        });-->
<!--        caches.keys().then(function(keyList) {-->
<!--            console.log(keyList);-->
<!--        });-->

<!--    }-->

<!--    function urlBase64ToUint8Array(base64String) {-->
<!--        const padding = '='.repeat((4 - base64String.length % 4) % 4);-->
<!--        const base64 = (base64String + padding)-->
<!--            .replace(/-/g, '+')-->
<!--            .replace(/_/g, '/');-->

<!--        const rawData = window.atob(base64);-->
<!--        const outputArray = new Uint8Array(rawData.length);-->

<!--        for (let i = 0; i < rawData.length; ++i) {-->
<!--            outputArray[i] = rawData.charCodeAt(i);-->
<!--        }-->
<!--        return outputArray;-->
<!--    }-->

<!--</script>-->

<form>
    <p>저장할 ID 입력 <textarea id="textarea" cols="30" rows="1"></textarea></p>
    <p>기타 입력할 내용 <textarea id="other" cols="30" rows="1"></textarea></p>
    <button type="button" id="click" onclick="button1_click();">확인</button>
</form>

<br>
<br>
<br>
<br>
<br>
<form>
    <p>찾을 ID를 입력하세요 <textarea id="textarea2" cols="30" rows="1"></textarea>
        <button type="button" id="click" onclick="fcm_find();">확인</button>
    </p>
</form>
<span id='pk'>로그아웃 상태</span>

<form>
    <button type="button" id="click" onclick="delete_token();">삭제(로그아웃)</button>
</form>
</body>
</html>